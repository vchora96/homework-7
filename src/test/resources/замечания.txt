1. Проект автотестирования является чаще всего самостоятельным и отдельным проектом хранящимся в отдельном репозитории. Если же идет хранение вместе с исходным кодом некоторого тестируемого сервиса, то описание страниц и тем более компонентов хранятся в пакетах с исходным кодом соответствующих компонентов и контейнеров страниц. Хранить же исходники автотестов в одном пакете вместе с тестами в корне неправильно и так делать не нужно. Так как у тебя пакеты со страницами и компонентами будут разрастаться, появляться новые абстракции в отдельных пакетах и со временем это приведет к хаосу. Поэтому пакеты со страницами, утилитами и компонентами необходимо вынести из пакета tests.

Ответ: понятно, исправлено

2. Тут имелось ввиду хранить в пакете src.pages

Ответ: понятно, исправлено

6. А так не получается? .js-custom-select-options-container:not(.hide) button[title='Viber']

Так же title в этот селектор необходимо передавать в методе как тип коммуникации и еще не совсем понятно для чего ты в метод передаешь String contactType ? Ради вывода в лог =) Наверное надо удалить этот параметр и в лог выводить элемент из передаваемого в метод  спсика

private void addContact(List<WebElement> communicationWays, String contactType, String value) {

Так же у тебя вот эти локаторы абсолютно одинаковые:

    @FindBy(xpath = "//div[@class ='lk-cv-block__select-options lk-cv-block__select-options_left" +
            " js-custom-select-options-container']/descendant::button[@title='Viber']")
    private List<WebElement> communicationViberWays;

    @FindBy(xpath = "//div[@class ='lk-cv-block__select-options lk-cv-block__select-options_left" +
            " js-custom-select-options-container']/descendant::button[@title='Skype']")
    private List<WebElement> communicationSkypeWays;

Нужно мало того, что их переписать, так еще один из них удалить, так как если у нас будет еще контакт скажем whatsApp, то прийдется эти локаторы копипастить и не будет гибкости.

Ответ: понятно, исправлено, но полностью протестировать из кода не получилось из-за CloudFlare на Отусе

7. Смотри пункт 6 =)

Кстати вместо вот такого страшного селектора:

     @FindBy(css = "input.input.input_straight-top-left.input_straight-bottom-left.lk-cv-block__input")

Можно написать вот такой: #id_contact-0-value где цифрой передавать номер контакта.

Ответ: понятно, я пытался использовать это id, но порядковый номер зависит от уже имеющихся контактов(0 и 1 можно использовать
при первом запуске теста на голом клиенте, наверное, нужно чистить, но протестировать из кода не получилось из-за CloudFlare на Отусе)

11. Ну тут не совсем это имелось ввиду. У тебя после клика сохранить идет проверка, что данные на форме успешно сохранились, а я имею ввиду проверять после ввода введенное значение, чтобы убедиться, что поле ввода и js-скрипты, которые повешены на него работают корректно.

Ответ: ок, исправлено, но протестировать из кода не получилось из-за CloudFlare на Отусе

18. Вот смотри, если у тебя будут проверки (ассерты в тесте), то получается мы не сможем такие проверки в отчете оформить в дальнейшем как шаги и вообще проверка это всего лишь шаг в тесте, а сам тест должен состоять из шагов, поэтому ассерты выносятся в методы класса соответствующей сущности (класс страницы или класс компонента).

Так же у тебя тест падает с ошибкой, что неверные креды пользователя для авторизации, исправь пожалуйста вот здесь:

    private final String pass = System.getProperty("pass", "");

Ответ: Исправлено, добавил в readme, как запускать проект

19. А почему у тебя в фабрику тип options -> Object ? Если посмотреть иерархию классов, то все опции наследуются от MutableCapabilities и получается делать явное преобразование типа Object не нужно.

Ответ: Исправлено

20. Этот метод всегда будет добавлять 2 типа связи для контакта, а если надо добавить другие типы коммуникации? Получается этот метод надо будет руками править. В общем исправь таким образом, чтобы можно было передавать несколько типов коммуникаций как параметры метода.

Ответ: Исправлено

21.     private void clickCity() {
        //todo: иногда не удается кликнуть на город, так как на предыдущем шаге не всплывает окно
        selectCity(City.ANGREN).click();
        logger.info("Кликаем на город");
    }

В этом методе надо дождаться появления окна после клика через WaitWebDriver. Исправь пожалуйста.

Ответ: сегодня не пытался решить эту проблему из-за CloudFlare на Отусе, но вчера я пытался реализовать с использованием
явного ожидания через WaitWebDriver, не помогает - работает через раз

22. Зачем в этом методе опять город захаркодил:

    private void clickCity() {
        //todo: иногда не удается кликнуть на город, так как на предыдущем шаге не всплывает окно
        selectCity(City.ANGREN).click();
        logger.info("Кликаем на город");
    }

Нужно написать метод, который сможет кликать и проверять любой город в любой стране, а не в конкретном городе определенной страны. Исправь пожалуйста. (город можно передавать как параметр метода, а страну брать из поля enum города).

Ответ: исправлено

23.     private void choseCountry() {
        selectCountry(Country.UZBEKISTAN).click();
        logger.info("Кликаем на Узбекистан");
    }

Тут тоже хардкор страны надо убрать.

Ответ: исправлено

24. Вот все эти локаторы можно заменить одним:

    @FindBy(xpath = "//input [@name ='fname']")
    private WebElement name;

    @FindBy(xpath = "//input [@name ='fname_latin']")
    private WebElement latinName;

    @FindBy(xpath = "//input [@name ='lname']")
    private WebElement secondName;

    @FindBy(xpath = "//input [@name ='lname_latin']")
    private WebElement latinSecondName;

    @FindBy(xpath = "//input [@name ='blog_name']")
    private WebElement blogName;

    @FindBy(xpath = "//input [@name ='date_of_birth']")
    private WebElement dateOfBirth;

private String fieldFormLocator = "//input[@name='%s']" и в этот шаблон имя поля ввода передавать как параметр метода например ввода или проверки введенного значения в поле ввода.

Ответ: исправлено

25. enum. с городами не связан со странами:

public enum City

Ответ: исправлено

26. А что это за класс с тестовыми данными: TestData ? Как раз такие тестовые данные лучше хранить в самом тесте, а не выносить в отдельный класс.

Ответ: исправлено

27. Вот этот метод проверки нужно сделать универсальным для любых городов и стран:

assertEquals(Country.UZBEKISTAN.getCountry(), driver.findElement(By.xpath("//input[@name ='country']/following-sibling::div")).getText());
        assertEquals(City.ANGREN.getCityName(), driver.findElement(By.xpath("//input[@name ='city']/" +
                "following-sibling::div")).getText());

Ответ: исправлено

28. Вот этот локатор надо переписать:

//input[@class='input input_straight-top-left " +
                "input_straight-bottom-left lk-cv-block__input" +
                " lk-cv-block__input_9 lk-cv-block__input_md-8']"));

Ответ: исправлено